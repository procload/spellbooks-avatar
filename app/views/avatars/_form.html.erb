<%= form_with model: form_object, url: form_url, method: form_method do |f| %>
  <% if form_object.errors.any? %>
    <%= render EldritchUi::BannerComponent.new(variant: :error) do %>
      <h2><%= pluralize(form_object.errors.count, "error") %> prevented this avatar from being saved:</h2>
      <ul>
        <% form_object.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    <% end %>
  <% end %>

  <%= render EldritchUi::TextInputComponent.new(
    name: "avatar[name]",
    value: form_object.name,
    label: "Name",
    required: true,
    error_message: form_object.errors[:name].first
  ) %>

  <%= render EldritchUi::RadioGroupComponent.new(
    legend: "Gender",
    name: "avatar[gender]",
    value: form_object.gender,
    options: (@genders || []).map { |g| { label: g.humanize, value: g } }
  ) %>

  <%= render EldritchUi::SelectComponent.new(
    name: "avatar[klass]",
    value: form_object.klass,
    options: @classes,
    label: "Class",
    required: true,
    error_message: form_object.errors[:klass].first
  ) %>

  <%= render EldritchUi::SelectComponent.new(
    name: "avatar[traits][]",
    value: Array(form_object.traits),
    options: @traits,
    label: "Fun traits",
    multiple: true,
    error_message: form_object.errors[:traits].first
  ) %>

  <%= render EldritchUi::ButtonComponent.new(
    label: submit_label,
    variant: :primary,
    size: :medium,
    type: "submit",
    data: { turbo: false }
  ) %>
<% end %>
